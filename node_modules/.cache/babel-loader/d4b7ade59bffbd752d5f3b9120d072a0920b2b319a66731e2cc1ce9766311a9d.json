{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bexruz.mullabayev\\\\Desktop\\\\parking-reservation-ui\\\\src\\\\Pages\\\\EmailVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiCall from '../Shared/Services/apiCalls';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailVerification = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const emailParam = params.get('email');\n    if (emailParam) {\n      setEmail(emailParam);\n    }\n  }, []);\n  const handleVerifyEmail = async () => {\n    if (!email) {\n      setMessage('No email provided in the URL.');\n      return;\n    }\n    setLoading(true);\n    setMessage('');\n    try {\n      const response = await apiCall({\n        endpoint: `/api/Users/VerifyEmail/${email}`,\n        method: 'PUT'\n      });\n      console.log(response);\n      if (response === \"Email verified successfully.\") {\n        setMessage('Email verified successfully! Redirecting you to login...');\n        setTimeout(() => navigate(\"/login\"), 3000);\n      }\n    } catch (error) {\n      setMessage('Failed to verify email. Please try again.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      maxWidth: '400px',\n      margin: 'auto',\n      border: '1px solid #ccc',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please click the button below to verify your email address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifyEmail,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      disabled: loading,\n      children: loading ? 'Verifying...' : 'Verify Email'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '15px',\n        color: message.includes('Failed') ? 'red' : 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailVerification, \"z5zitI8cqJLXx1bXUYbSHbb2q3o=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailVerification;\nexport default EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["React","useState","useEffect","apiCall","useNavigate","jsxDEV","_jsxDEV","EmailVerification","_s","message","setMessage","loading","setLoading","email","setEmail","navigate","params","URLSearchParams","window","location","search","emailParam","get","handleVerifyEmail","response","endpoint","method","console","log","setTimeout","error","style","textAlign","padding","maxWidth","margin","border","borderRadius","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","cursor","disabled","marginTop","includes","_c","$RefreshReg$"],"sources":["C:/Users/bexruz.mullabayev/Desktop/parking-reservation-ui/src/Pages/EmailVerification.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiCall from '../Shared/Services/apiCalls';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst EmailVerification = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n const navigate = useNavigate()\r\n  useEffect(() => {\r\n\r\n    const params = new URLSearchParams(window.location.search);\r\n    const emailParam = params.get('email');\r\n    if (emailParam) {\r\n      setEmail(emailParam);\r\n    }\r\n  }, []);\r\n\r\n  const handleVerifyEmail = async () => {\r\n    if (!email) {\r\n      setMessage('No email provided in the URL.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setMessage('');\r\n    try {\r\n        const response = await apiCall({\r\n            endpoint: `/api/Users/VerifyEmail/${email}`,\r\n            method: 'PUT'\r\n        });\r\n        console.log(response);\r\n        if (response === \"Email verified successfully.\") {\r\n            setMessage('Email verified successfully! Redirecting you to login...');\r\n            setTimeout(() => navigate(\"/login\"), 3000);\r\n        }      \r\n    } catch (error) {\r\n      setMessage('Failed to verify email. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', maxWidth: '400px', margin: 'auto', border: '1px solid #ccc', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0,0,0,0.1)' }}>\r\n      <h2>Email Verification</h2>\r\n      <p>Please click the button below to verify your email address.</p>\r\n      <button \r\n        onClick={handleVerifyEmail} \r\n        style={{ padding: '10px 20px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Verifying...' : 'Verify Email'}\r\n      </button>\r\n      {message && <p style={{ marginTop: '15px', color: message.includes('Failed') ? 'red' : 'green' }}>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}